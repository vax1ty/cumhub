local UILibrary = {}

function UILibrary:CreateHub()
    local hub = Instance.new("ScreenGui")
    hub.Name = "Hub"
    hub.Parent = game.Players.LocalPlayer:WaitForChild("PlayerGui")

    local rightPanel = Instance.new("Frame")
    rightPanel.Name = "RightPanel"
    rightPanel.Parent = hub
    rightPanel.BackgroundColor3 = Color3.fromRGB(30, 30, 30)
    rightPanel.Size = UDim2.new(0.7, 0, 1, 0)
    rightPanel.Position = UDim2.new(0.3, 0, 0, 0)

    hub.RightPanel = rightPanel -- Removed this line as it's unnecessary

    return hub, rightPanel -- Return rightPanel for easy reference
end

function UILibrary:AddElement(parent, element)
    if not parent.Layout then
        local layout = Instance.new("UIListLayout")
        layout.Parent = parent
        layout.Padding = UDim.new(0, 10)
        parent.Layout = layout
    end
    element.Parent = parent
end

function UILibrary:AddTabButton(hub, name, text, size, callback)
    local tabButton = Instance.new("TextButton")
    tabButton.Name = name
    tabButton.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    tabButton.Size = UDim2.new(0, size, 0, 50)
    tabButton.Text = text
    tabButton.MouseButton1Click:Connect(callback)
    self:AddElement(hub, tabButton)
    return tabButton
end

function UILibrary:AddToggle(parent, name, text, callback)
    local toggle = Instance.new("TextButton")
    toggle.Name = name
    toggle.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    toggle.Size = UDim2.new(0.8, 0, 0.1, 0)
    toggle.Text = text
    local state = false
    toggle.MouseButton1Click:Connect(function()
        state = not state
        callback(state)
    end)
    self:AddElement(parent, toggle)
    return toggle
end

function UILibrary:AddSlider(parent, name, text, min, max, callback)
    local slider = Instance.new("TextButton")
    slider.Name = name
    slider.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    slider.Size = UDim2.new(0.8, 0, 0.1, 0)
    slider.Text = text
    slider.MouseButton1Click:Connect(function()
        local value = math.random(min, max)
        callback(value)
    end)
    self:AddElement(parent, slider)
    return slider
end

function UILibrary:AddButton(parent, name, text, callback)
    local button = Instance.new("TextButton")
    button.Name = name
    button.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    button.Size = UDim2.new(0.8, 0, 0.1, 0)
    button.Text = text
    button.MouseButton1Click:Connect(function()
        callback()
    end)
    self:AddElement(parent, button)
    return button
end

function UILibrary:AddColorPicker(parent, name, text, callback)
    local colorPicker = Instance.new("TextButton")
    colorPicker.Name = name
    colorPicker.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    colorPicker.Size = UDim2.new(0.8, 0, 0.1, 0)
    colorPicker.Text = text
    colorPicker.MouseButton1Click:Connect(function()
        local color = Color3.fromRGB(math.random(0, 255), math.random(0, 255), math.random(0, 255))
        callback(color)
    end)
    self:AddElement(parent, colorPicker)
    return colorPicker
end

function UILibrary:AddTextBox(parent, name, text, callback)
    local textBox = Instance.new("TextBox")
    textBox.Name = name
    textBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    textBox.Size = UDim2.new(0.8, 0, 0.1, 0)
    textBox.PlaceholderText = text
    textBox.FocusLost:Connect(function(enterPressed)
        if enterPressed then
            callback(textBox.Text)
        end
    end)
    self:AddElement(parent, textBox)
    return textBox
end

function UILibrary:AddComboBox(parent, name, text, options, callback)
    local comboBox = Instance.new("TextButton")
    comboBox.Name = name
    comboBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    comboBox.Size = UDim2.new(0.8, 0, 0.1, 0)
    comboBox.Text = text
    comboBox.MouseButton1Click:Connect(function()
        local selected = options[math.random(1, #options)]
        callback(selected)
    end)
    self:AddElement(parent, comboBox)
    return comboBox
end

function UILibrary:AddMultiSelect(parent, name, text, options, callback)
    local multiSelect = Instance.new("TextButton")
    multiSelect.Name = name
    multiSelect.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    multiSelect.Size = UDim2.new(0.8, 0, 0.1, 0)
    multiSelect.Text = text
    multiSelect.MouseButton1Click:Connect(function()
        local selectedOptions = {}
        for _, option in ipairs(options) do
            if math.random(0, 1) == 1 then
                table.insert(selectedOptions, option)
            end
        end
        callback(selectedOptions)
    end)
    self:AddElement(parent, multiSelect)
    return multiSelect
end

function UILibrary:AddLabel(parent, name, text)
    local label = Instance.new("TextLabel")
    label.Name = name
    label.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    label.Size = UDim2.new(0.8, 0, 0.1, 0)
    label.Text = text
    label.TextColor3 = Color3.fromRGB(255, 255, 255)
    label.Font = Enum.Font.SourceSans
    label.TextSize = 14
    self:AddElement(parent, label)
    return label
end

function UILibrary:AddHotkey(parent, name, text, keyCode, callback)
    local hotkey = Instance.new("TextButton")
    hotkey.Name = name
    hotkey.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    hotkey.Size = UDim2.new(0.8, 0, 0.1, 0)
    hotkey.Text = text
    hotkey.MouseButton1Click:Connect(function()
        print("Press the key")
    end)
    game:GetService("UserInputService").InputBegan:Connect(function(input)
        if input.KeyCode == keyCode then
            callback()
        end
    end)
    self:AddElement(parent, hotkey)
    return hotkey
end

function UILibrary:AddCheckbox(parent, name, text, callback)
    local checkbox = Instance.new("TextButton")
    checkbox.Name = name
    checkbox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    checkbox.Size = UDim2.new(0.8, 0, 0.1, 0)
    checkbox.Text = text
    local state = false
    checkbox.MouseButton1Click:Connect(function()
        state = not state
        callback(state)
    end)
    self:AddElement(parent, checkbox)
    return checkbox
end

function UILibrary:AddListBox(parent, name, text, items, callback)
    local listBox = Instance.new("TextButton")
    listBox.Name = name
    listBox.BackgroundColor3 = Color3.fromRGB(60, 60, 60)
    listBox.Size = UDim2.new(0.8, 0, 0.1, 0)
    listBox.Text = text
    listBox.MouseButton1Click:Connect(function()
        local selectedItem = items[math.random(1, #items)]
        callback(selectedItem)
    end)
    self:AddElement(parent, listBox)
    return listBox
end

function UILibrary:AddString(name, value)
    local stringObject = {
        Name = name,
        Value = value or ""
    }
    return stringObject
end

function UILibrary:SetMenuVisible(menu, visible)
    menu.Visible = visible
end

return UILibrary
